import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as h,d as e,e as d,b as c,w as i,f as t}from"./app-080a317b.js";const n={},u=t('<h2 id="入口" tabindex="-1"><a class="header-anchor" href="#入口" aria-hidden="true">#</a> 入口</h2><p>在<code>应用商店</code>点击<code>自定义安装</code>按钮可以安装任意docker应用。</p><h2 id="表单填写规范" tabindex="-1"><a class="header-anchor" href="#表单填写规范" aria-hidden="true">#</a> 表单填写规范</h2><h3 id="docker镜像名称" tabindex="-1"><a class="header-anchor" href="#docker镜像名称" aria-hidden="true">#</a> Docker镜像名称</h3><p><code>必填项</code> <code>文本框</code></p><ul><li>填写 <em>Docker Hub</em> 中存在的镜像名称。例如 <code>portainer/portainer</code></li></ul><h3 id="docker镜像版本" tabindex="-1"><a class="header-anchor" href="#docker镜像版本" aria-hidden="true">#</a> Docker镜像版本</h3><p><code>必填项</code> <code>下拉列表</code></p><ul><li>Docker镜像名称填写正确后，此处将自动从docker hub获取镜像的版本列表。如果显示<code>暂无数据</code>，请检查镜像名称是否填写错误。</li></ul><div class="hint-container tip"><p class="hint-container-title">注意</p><p>版本列表只显示系统架构为<code>linux/arm64</code>的TAG</p></div><h3 id="应用名称" tabindex="-1"><a class="header-anchor" href="#应用名称" aria-hidden="true">#</a> 应用名称</h3><p><code>必填项</code> <code>文本框</code></p><ul><li>显示在主页面图标下面</li><li>长度255个字符以内，支持大小写字母、数字、中文和@ : . ?[]{}</li></ul><h3 id="容器主机名" tabindex="-1"><a class="header-anchor" href="#容器主机名" aria-hidden="true">#</a> 容器主机名</h3><p><code>必填项</code> <code>文本框</code></p><ul><li>定义容器主机的hostname，参数会直接写入容器主机的/etc/hostname文件中</li></ul><h3 id="应用图标" tabindex="-1"><a class="header-anchor" href="#应用图标" aria-hidden="true">#</a> 应用图标</h3><p><code>必填项</code> <code>文件选择</code></p><ul><li>定义应用在主页面显示的图标</li><li>图标上传后，会被裁剪成96*96像素大小的图片，然后保存</li></ul><h3 id="web-ui" tabindex="-1"><a class="header-anchor" href="#web-ui" aria-hidden="true">#</a> Web UI</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>填入一个1024-65565范围内的端口号。当在主页面点击图标时，网页将打开一个当前域名并拼接此端口号的新页面。例如 <code>192.168.1.100:9000</code></li><li>如果不填，在主页面点击图标时，网页不跳转</li></ul><h3 id="网络" tabindex="-1"><a class="header-anchor" href="#网络" aria-hidden="true">#</a> 网络</h3><p><code>必填项</code> <code>下拉列表</code></p><ul><li>用于指定docker容器的网络模式 <ul><li><code>bridge</code>模式下，Docker会为容器创建一个虚拟网络接口，并分配一个独立IP地址。容器之间相互隔离，只能在桥接网络中通信</li><li><code>host</code>模式下，容器直接使用HOUZZkit主机的网络资源。这样，容器中的应用程序可以直接访问HOUZZkit所在网络上的服务</li></ul></li><li>默认选择<code>bridge</code>模式</li></ul><h3 id="端口" tabindex="-1"><a class="header-anchor" href="#端口" aria-hidden="true">#</a> 端口</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于指定HOUZZkit主机和容器之间的端口映射关系</li><li>端口映射是通过HOUZZkit主机端口和容器端口建立通信实现的，通信协议可选择<code>TCP</code>或<code>UDP</code>，默认为<code>TCP</code></li><li>端口映射可以添加多个或不添加</li><li>不论应用内还是应用间，主机端口不可重复</li></ul><h3 id="卷" tabindex="-1"><a class="header-anchor" href="#卷" aria-hidden="true">#</a> 卷</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于指定HOUZZkit主机和容器内文件或文件夹的映射关系</li><li>当容器在指定的容器路径创建或修改文件后，HOUZZkit主机就可以在设定的主机路径中直接访问。由此产生的文件，不会因为容器的重启或删除而丢失</li><li>卷可以添加多个或不添加</li></ul><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于指定在容器生命周期内生效的环境变量，指定一个环境变量需要同时定义键值对</li><li>环境变量可以添加多个或不添加</li></ul><h3 id="设备" tabindex="-1"><a class="header-anchor" href="#设备" aria-hidden="true">#</a> 设备</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于将HOUZZkit主机硬件设备映射到容器，以便让容器直接访问</li><li>设备可以添加多个或不添加</li></ul><h3 id="容器命令" tabindex="-1"><a class="header-anchor" href="#容器命令" aria-hidden="true">#</a> 容器命令</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于定义容器启动时，需要执行的默认命令。如果在运行容器时提供了命令行参数，此处定义中命令将被覆盖。主要用于执行容器内的SHELL脚本</li><li>命令可以添加多个或不添加。添加多个时，只有最后一个会生效</li></ul><h3 id="入口点" tabindex="-1"><a class="header-anchor" href="#入口点" aria-hidden="true">#</a> 入口点</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于指定容器启动时的固定执行命令，该命令不会被覆盖。主要用于启动容器内的命令行解释器</li><li>默认值为 <code>/bin/bash</code>，一般不用修改。如果右击应用图标，点击<code>终端</code>，无法进入容器终端时，可以尝试修改此值</li></ul><h3 id="使用高权限执行容器" tabindex="-1"><a class="header-anchor" href="#使用高权限执行容器" aria-hidden="true">#</a> 使用高权限执行容器</h3><p><code>非必填项</code> <code>开关按钮</code></p><ul><li>开启后，容器以<code>特权模式</code>运行。Docker会赋予容器<strong>几乎</strong>与主机相同的权限</li><li>如非必要，请勿开启</li></ul><h3 id="重启策略" tabindex="-1"><a class="header-anchor" href="#重启策略" aria-hidden="true">#</a> 重启策略</h3><p><code>非必填项</code> <code>下拉列表</code></p><ul><li>用于指定当容器退出时，守护进程以何种策略重启容器</li><li>可以选择的重启策略如下 <ul><li><code>no</code> 默认策略，在容器退出时不重启容器</li><li><code>always</code> 在容器退出时总是重启容器</li><li><code>unless-stopped</code> 在容器退出时总是重启容器，当HOUZZkit主机重启时，在重启前已经停止的容器不会被重启</li><li><code>on-failure</code> 在容器非正常退出时（退出状态非0），才会重启容器</li></ul></li></ul><h3 id="内存限制" tabindex="-1"><a class="header-anchor" href="#内存限制" aria-hidden="true">#</a> 内存限制</h3><p><code>非必填项</code> <code>文本框</code></p><ul><li>用于指定容器可以使用的最大内存，单位为<code>MB</code></li><li>设置为<code>0</code>MB，则不限制</li></ul><h3 id="cpu限制" tabindex="-1"><a class="header-anchor" href="#cpu限制" aria-hidden="true">#</a> CPU限制</h3><p><code>非必填项</code> <code>下拉列表</code></p><ul><li>用于指定容器可以利用的CPU最大使用率</li><li>有 <code>无</code> <code>低</code> <code>中</code> <code>高</code> 四种选项 <ul><li><code>无</code> -不限制</li><li><code>低</code> -25%</li><li><code>中</code> -50%</li><li><code>高</code> -75%</li></ul></li></ul><h3 id="应用初始化配置文件" tabindex="-1"><a class="header-anchor" href="#应用初始化配置文件" aria-hidden="true">#</a> 应用初始化配置文件</h3><p><code>非必填项</code> <code>文件选择</code></p>',57),s=e("li",null,[d("用于定义应用正常工作前需要完成的一系列配置。正确的定义后，应用安装完后容器将不会自动，直到用户完成"),e("code",null,"启动设置")],-1),p=e("h3",{id:"应用卸载脚本",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#应用卸载脚本","aria-hidden":"true"},"#"),d(" 应用卸载脚本")],-1),_=e("p",null,[e("code",null,"非必填项"),d(),e("code",null,"文件选择")],-1),k=e("li",null,"用于定义应用卸载时，除删除容器以外，还需要进行的一系列卸载操作",-1),f=e("h3",{id:"资源文件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#资源文件","aria-hidden":"true"},"#"),d(" 资源文件")],-1),b=e("p",null,[e("code",null,"非必填项"),d(),e("code",null,"文件选择")],-1),x=e("li",null,"用于定义应用初始化配置过程中，需要用到的一系列资源文件",-1);function m(Z,U){const o=l("RouterLink");return r(),h("div",null,[u,e("ul",null,[s,e("li",null,[d("配置文件为yaml格式的文本文件，具体配置方法，请参考 "),c(o,{to:"/developers/houzzkit_docker_package_make.html"},{default:i(()=>[d("开发者指南")]),_:1})])]),p,_,e("ul",null,[k,e("li",null,[d("卸载脚本为sh格式的自动化脚本，具体配置方法，请参考 "),c(o,{to:"/developers/houzzkit_docker_package_make.html"},{default:i(()=>[d("开发者指南")]),_:1})])]),f,b,e("ul",null,[x,e("li",null,[d("上传资源可以为文件或者文件夹，具体使用方法，请参考 "),c(o,{to:"/developers/houzzkit_docker_package_make.html"},{default:i(()=>[d("开发者指南")]),_:1})])])])}const O=a(n,[["render",m],["__file","custom_docker_installation.html.vue"]]);export{O as default};
